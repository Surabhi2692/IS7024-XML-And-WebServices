@page
@model CovidTracker.Pages.Covid19CasesAndDeathsModel
@{
    CovidTracker.CasesAndDeaths.Covid19CasesAndDeaths covid19CasesAndDeaths = (CovidTracker.CasesAndDeaths.Covid19CasesAndDeaths)ViewData["Covid19CasesAndDeaths"];
}

<div class="container pt-4">
    <form method="get" class="row mb-3 ml-1">
        <div class="input-group row">
            <div class="col-sm-2 font-weight-bold">Choose State</div>
            <select class="form-control" name="query" asp-for="@Model.SearchState" asp-items="ViewBag.SearchState"></select>
            <div class="input-group-append">
                <input type="submit" value="Search" class="btn btn-outline-secondary" />
            </div>
        </div>
    </form>

    @if (string.IsNullOrWhiteSpace(Model.SearchState))
    {

    }
    else if (covid19CasesAndDeaths == null)
    {
        <div class="alert alert-info">COVID19 Data for @Model.statesDictionary[@Model.SearchState] not found.</div>
    }
    else
    {
        <div class="row mb-3">
            <div class="col-md-6">
                <div class="card card-body shadow border-0 card-background">
                    <div class="subtitle lead">
                        CUMULATIVE
                    </div>
                    <hr />
                    <dl class="row">
                        <dt class="col-sm-6">
                            Date
                        </dt>
                        <dd class="col-sm-6">
                            @covid19CasesAndDeaths.SubmissionDate.Date.ToShortDateString()
                        </dd>
                        <dt class="col-sm-6">
                            State
                        </dt>
                        <dd class="col-sm-6">
                            @Model.statesDictionary[covid19CasesAndDeaths.State.ToString()]
                        </dd>
                        <dt class="col-sm-6">
                            Total Cases
                        </dt>
                        <dd class="col-sm-6">
                            @covid19CasesAndDeaths.TotCases
                        </dd>
                        <dt class="col-sm-6">
                            Total Confirmed Cases
                        </dt>
                        <dd class="col-sm-6">
                            @if (string.IsNullOrWhiteSpace(covid19CasesAndDeaths.ConfCases))
                            {
                                <span class="badge badge-warning">Unknown</span>
                            }
                            else
                            {
                                @covid19CasesAndDeaths.ConfCases
                            }
                        </dd>
                        <dt class="col-sm-6">
                            Total Deaths
                        </dt>
                        <dd class="col-sm-6">
                            @covid19CasesAndDeaths.TotDeath
                        </dd>
                        <dt class="col-sm-6">
                            Total Confirmed Deaths
                        </dt>
                        <dd class="col-sm-6">
                            @if (string.IsNullOrWhiteSpace(covid19CasesAndDeaths.ConfDeath))
                            {
                                <span class="badge badge-warning">Unknown</span>
                            }
                            else
                            {
                                @covid19CasesAndDeaths.ConfDeath
                            }
                        </dd>
                    </dl>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card card-body shadow border-0 card-background" >
                    <div class="subtitle lead">
                        DAILY
                    </div>
                    <hr />
                    <dl class="row">
                        <dt class="col-sm-6">
                            Date
                        </dt>
                        <dd class="col-sm-6">
                            @covid19CasesAndDeaths.SubmissionDate.Date.ToShortDateString()
                        </dd>
                        <dt class="col-sm-6">
                            State
                        </dt>
                        <dd class="col-sm-6">
                            @Model.statesDictionary[covid19CasesAndDeaths.State.ToString()]
                        </dd>
                        <dt class="col-sm-6">
                            New Cases
                        </dt>
                        <dd class="col-sm-6">
                            @if (string.IsNullOrWhiteSpace(covid19CasesAndDeaths.NewCase))
                            {
                                <span class="badge badge-warning">Unknown</span>
                            }
                            else
                            {
                                @covid19CasesAndDeaths.NewCase
                            }
                        </dd>
                        <dt class="col-sm-6">
                            Probable Cases
                        </dt>
                        <dd class="col-sm-6">
                            @if (covid19CasesAndDeaths.PnewCase == null)
                            {
                                <span class="badge badge-warning">Unknown</span>
                            }
                            else
                            {
                                @covid19CasesAndDeaths.PnewCase
                            }
                        </dd>
                        <dt class="col-sm-6">
                            New Deaths
                        </dt>
                        <dd class="col-sm-6">
                            @if (string.IsNullOrWhiteSpace(covid19CasesAndDeaths.NewDeath))
                            {
                                <span class="badge badge-warning">Unknown</span>
                            }
                            else
                            {
                                @covid19CasesAndDeaths.NewDeath
                            }
                        </dd>
                        <dt class="col-sm-6">
                            Probable Deaths
                        </dt>
                        <dd class="col-sm-6">
                            @if (covid19CasesAndDeaths.PnewDeath == null)
                            {
                                <span class="badge badge-warning">Unknown</span>
                            }
                            else
                            {
                                @covid19CasesAndDeaths.PnewDeath
                            }
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div id="covid19CasesChart" class="chart-height"></div>
            </div>
            <div class="col-md-6">
                <div id="covid19DeathsChart" class="chart-height" ></div>
            </div>
        </div>
    }
</div>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">

    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        var casesData = google.visualization.arrayToDataTable([
            ['Date', 'Cases'],

            @foreach (var covid19CaseAndDeath in Model.Covid19CasesAndDeathsList)
            {
                <text>['@covid19CaseAndDeath.SubmittedDate.Date.ToShortDateString()', @covid19CaseAndDeath.NewCases],</text>
            }
        ]);

        var casesOptions = {
            title: 'New Cases Trend by Day',
            legend: 'none',
            hAxis: {
                title: 'Date',
                titleTextStyle: {
                    bold: true
                }
            },
            vAxis: {
                title: 'Cases',
                titleTextStyle: {
                    bold: true
                },
                viewWindow: {
                    min: 0,
                    max: 30000
                }
            }
        };

        var casesChart = new google.visualization.ColumnChart(document.getElementById('covid19CasesChart'));
        casesChart.draw(casesData, casesOptions);

        var deathsData = google.visualization.arrayToDataTable([
            ['Date', 'Deaths'],

            @foreach (var covid19CaseAndDeath in Model.Covid19CasesAndDeathsList)
            {
                <text>['@covid19CaseAndDeath.SubmittedDate.Date.ToShortDateString()', @covid19CaseAndDeath.NewDeaths],</text>
            }
        ]);

        var deathsOptions = {
            title: 'New Deaths Trend by Day',
            curveType: 'function',
            pointsVisible: true,
            lineWidth: 3,
            legend: 'none',
            hAxis: {
                title: 'Date',
                titleTextStyle: {
                    bold: true
                }
            },
            vAxis: {
                title: 'Deaths',
                titleTextStyle: {
                    bold: true
                },
                viewWindow: {
                    min: 0,
                    max: 500
                }
            }
        };

        var deathsChart = new google.visualization.ColumnChart(document.getElementById('covid19DeathsChart'));
        deathsChart.draw(deathsData, deathsOptions);
    }
</script>

